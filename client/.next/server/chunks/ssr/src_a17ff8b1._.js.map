{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/users/doctor/prescription/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    Plus,\r\n    Trash2,\r\n    Save,\r\n    Pill,\r\n    TestTube,\r\n    ClipboardList,\r\n    Stethoscope,\r\n} from \"lucide-react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardDescription,\r\n    CardHeader,\r\n    CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { useParams, useSearchParams } from \"next/navigation\";\r\nimport apiClient from \"@/app/api-client\";\r\nimport { toast } from \"sonner\";\r\nconst medicationSchema = Yup.object().shape({\r\n    name: Yup.string(),\r\n    dosage: Yup.string(),\r\n    frequency: Yup.string(),\r\n    duration: Yup.string(),\r\n    instructions: Yup.string(),\r\n});\r\n\r\nconst testSchema = Yup.object().shape({\r\n    testName: Yup.string().required(\"Test name is required\"),\r\n    reason: Yup.string(),\r\n    urgency: Yup.string(),\r\n});\r\n\r\nconst prescriptionSchema = Yup.object().shape({\r\n    examinationNotes: Yup.string().required(\"Examination notes are required\"),\r\n    diagnosis: Yup.string().required(\"Diagnosis is required\"),\r\n    medications: Yup.array()\r\n        .of(medicationSchema)\r\n        .min(1, \"At least one medication is required\"),\r\n    suggestedTests: Yup.array().of(testSchema),\r\n    notes: Yup.string(),\r\n});\r\n\r\nconst Prescription = () => {\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const searchParams = useSearchParams();\r\n    const appointmentId = searchParams.get(\"appointmentId\") || \"\";\r\n\r\n    const initialValues = {\r\n        examinationNotes: \"\",\r\n        diagnosis: \"\",\r\n        medications: [\r\n            { name: \"\", dosage: \"\", frequency: \"\", duration: \"\", instructions: \"\" },\r\n        ],\r\n        suggestedTests: [],\r\n        notes: \"\",\r\n    };\r\n    const { id } = useParams()\r\n\r\n    const handleSubmit = async (values: typeof initialValues, { resetForm }: any) => {\r\n        setIsSubmitting(true);\r\n        try {\r\n            console.log(values)\r\n            // const response = await apiClient.post(`/prescription/${id}`, values)\r\n            // toast(response.data.message)\r\n            resetForm();\r\n        } catch (error) {\r\n            toast(\"Failed to create prescription. Please try again.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-green-100\">\r\n            <div className=\"container mx-auto px-4 py-8\">\r\n                <div className=\"text-center mb-8\">\r\n                    <div className=\"flex items-center justify-center gap-2 mb-4\">\r\n                        <ClipboardList className=\"h-8 w-8 text-green-600\" />\r\n                        <h1 className=\"text-3xl font-bold text-green-600\">\r\n                            Create Prescription & Examination\r\n                        </h1>\r\n                    </div>\r\n                    <p className=\"text-gray-600\">\r\n                        Record examination details, prescribe medications, and recommend tests.\r\n                    </p>\r\n                </div>\r\n\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={prescriptionSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ values, errors }) => (\r\n                        <Form className=\"max-w-4xl mx-auto space-y-6\">\r\n                            {/* Examination Notes */}\r\n                            <Card className=\"border-green-100\">\r\n                                <CardHeader className=\"bg-green-50\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-green-600\">\r\n                                        <ClipboardList className=\"h-5 w-5\" />\r\n                                        Examination Notes\r\n                                    </CardTitle>\r\n                                    <CardDescription className=\"text-gray-600\">\r\n                                        Record your examination findings and diagnosis.\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent className=\"space-y-4\">\r\n                                    <div>\r\n                                        <Label htmlFor=\"examinationNotes\" className=\"text-green-700 font-medium\">\r\n                                            Examination Findings *\r\n                                        </Label>\r\n                                        <Field\r\n                                            as={Textarea}\r\n                                            id=\"examinationNotes\"\r\n                                            name=\"examinationNotes\"\r\n                                            placeholder=\"Enter examination findings...\"\r\n                                            className=\"min-h-[120px] resize-none mt-1 placeholder:text-gray-400\"\r\n                                        />\r\n                                        <ErrorMessage\r\n                                            name=\"examinationNotes\"\r\n                                            component=\"p\"\r\n                                            className=\"text-red-500 text-sm mt-1\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Label htmlFor=\"diagnosis\" className=\"text-green-700 font-medium\">\r\n                                            Diagnosis *\r\n                                        </Label>\r\n                                        <Field\r\n                                            as={Textarea}\r\n                                            id=\"diagnosis\"\r\n                                            name=\"diagnosis\"\r\n                                            placeholder=\"Enter diagnosis...\"\r\n                                            className=\"min-h-[80px] resize-none mt-1 placeholder:text-gray-400\"\r\n                                        />\r\n                                        <ErrorMessage\r\n                                            name=\"diagnosis\"\r\n                                            component=\"p\"\r\n                                            className=\"text-red-500 text-sm mt-1\"\r\n                                        />\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Medications */}\r\n                            <Card className=\"border-green-100\">\r\n                                <CardHeader className=\"bg-green-50\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-green-600\">\r\n                                        <Pill className=\"h-5 w-5\" />\r\n                                        Medications\r\n                                    </CardTitle>\r\n                                    <CardDescription className=\"text-gray-600\">\r\n                                        List prescribed medications and instructions.\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <FieldArray name=\"medications\">\r\n                                        {({ push, remove }) => (\r\n                                            <div className=\"space-y-6\">\r\n                                                {values.medications.map((med, index) => (\r\n                                                    <div\r\n                                                        key={index}\r\n                                                        className=\"p-4 border border-green-100 rounded-lg bg-white\"\r\n                                                    >\r\n                                                        <div className=\"flex justify-between items-center mb-4\">\r\n                                                            <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\r\n                                                                Medication {index + 1}\r\n                                                            </Badge>\r\n                                                            {values.medications.length > 1 && (\r\n                                                                <Button\r\n                                                                    type=\"button\"\r\n                                                                    variant=\"outline\"\r\n                                                                    size=\"sm\"\r\n                                                                    onClick={() => remove(index)}\r\n                                                                    className=\"text-red-500 border-red-500 hover:bg-red-50\"\r\n                                                                >\r\n                                                                    <Trash2 className=\"h-4 w-4\" />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                                            <div className=\"md:col-span-2\">\r\n                                                                <Label className=\"text-green-700 font-medium\">Name *</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.name`}\r\n                                                                    placeholder=\"Medication name\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                                <ErrorMessage\r\n                                                                    name={`medications.${index}.name`}\r\n                                                                    component=\"p\"\r\n                                                                    className=\"text-red-500 text-sm mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Dosage</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.dosage`}\r\n                                                                    placeholder=\"e.g., 500mg\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Frequency</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.frequency`}\r\n                                                                    placeholder=\"e.g., Twice daily\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Duration</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.duration`}\r\n                                                                    placeholder=\"e.g., 7 days\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Instructions</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.instructions`}\r\n                                                                    placeholder=\"e.g., After meals\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                                <Button\r\n                                                    type=\"button\"\r\n                                                    variant=\"outline\"\r\n                                                    onClick={() =>\r\n                                                        push({\r\n                                                            name: \"\",\r\n                                                            dosage: \"\",\r\n                                                            frequency: \"\",\r\n                                                            duration: \"\",\r\n                                                            instructions: \"\",\r\n                                                        })\r\n                                                    }\r\n                                                    className=\"w-full border-green-500 text-green-600 hover:bg-green-50\"\r\n                                                >\r\n                                                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                                                    Add Another Medication\r\n                                                </Button>\r\n                                                {errors.medications && typeof errors.medications === \"string\" && (\r\n                                                    <p className=\"text-red-500 text-sm\">{errors.medications}</p>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </FieldArray>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Suggested Tests */}\r\n                            <Card className=\"border-green-100\">\r\n                                <CardHeader className=\"bg-green-50\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-green-600\">\r\n                                        <TestTube className=\"h-5 w-5\" />\r\n                                        Suggested Tests\r\n                                    </CardTitle>\r\n                                    <CardDescription className=\"text-gray-600\">\r\n                                        Recommend tests if necessary.\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <FieldArray name=\"suggestedTests\">\r\n                                        {({ push, remove }) => (\r\n                                            <div className=\"space-y-4\">\r\n                                                {values.suggestedTests.map((test, index) => (\r\n                                                    <div\r\n                                                        key={index}\r\n                                                        className=\"p-4 border border-green-100 rounded-lg bg-white\"\r\n                                                    >\r\n                                                        <div className=\"flex justify-between items-center mb-4\">\r\n                                                            <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\r\n                                                                Test {index + 1}\r\n                                                            </Badge>\r\n                                                            <Button\r\n                                                                type=\"button\"\r\n                                                                variant=\"outline\"\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => remove(index)}\r\n                                                                className=\"text-red-500 border-red-500 hover:bg-red-50\"\r\n                                                            >\r\n                                                                <Trash2 className=\"h-4 w-4\" />\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Test Name *</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`suggestedTests.${index}.testName`}\r\n                                                                    placeholder=\"e.g., Blood Test\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                                <ErrorMessage\r\n                                                                    name={`suggestedTests.${index}.testName`}\r\n                                                                    component=\"p\"\r\n                                                                    className=\"text-red-500 text-sm mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Urgency</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`suggestedTests.${index}.urgency`}\r\n                                                                    placeholder=\"e.g., Routine\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <Label className=\"text-green-700 font-medium\">Reason</Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`suggestedTests.${index}.reason`}\r\n                                                                    placeholder=\"Reason for test\"\r\n                                                                    className=\"mt-1 placeholder:text-gray-400\"\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                                <Button\r\n                                                    type=\"button\"\r\n                                                    variant=\"outline\"\r\n                                                    onClick={() =>\r\n                                                        push({ testName: \"\", reason: \"\", urgency: \"\" })\r\n                                                    }\r\n                                                    className=\"w-full border-green-500 text-green-600 hover:bg-green-50\"\r\n                                                >\r\n                                                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                                                    Add Suggested Test\r\n                                                </Button>\r\n                                            </div>\r\n                                        )}\r\n                                    </FieldArray>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Additional Notes */}\r\n                            <Card className=\"border-green-100\">\r\n                                <CardHeader className=\"bg-green-50\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-green-600\">\r\n                                        <Stethoscope className=\"h-5 w-5\" />\r\n                                        Additional Notes\r\n                                    </CardTitle>\r\n                                    <CardDescription className=\"text-gray-600\">\r\n                                        Optional notes or instructions.\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <Field\r\n                                        as={Textarea}\r\n                                        name=\"notes\"\r\n                                        placeholder=\"Follow-up instructions, precautions...\"\r\n                                        className=\"min-h-[120px] resize-none placeholder:text-gray-400\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Submit Button */}\r\n                            <div className=\"flex justify-center\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    disabled={isSubmitting}\r\n                                    className=\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 text-lg font-medium\"\r\n                                >\r\n                                    {isSubmitting ? (\r\n                                        <>\r\n                                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\r\n                                            Creating...\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Save className=\"h-5 w-5 mr-2\" />\r\n                                            Create Prescription\r\n                                        </>\r\n                                    )}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Prescription;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}