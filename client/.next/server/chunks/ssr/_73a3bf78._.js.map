{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,8DACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,8DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,0CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/register/page.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { User, Phone } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport * as Yup from 'yup';\r\n\r\nexport const registerSchema = Yup.object({\r\n    name: Yup.string()\r\n        .min(2, 'Name must be at least 2 characters')\r\n        .max(50, 'Name must be less than 50 characters')\r\n        .required('Name is required'),\r\n\r\n    email: Yup.string()\r\n        .email('Please enter a valid email address')\r\n        .required('Email is required'),\r\n\r\n    phone: Yup.string()\r\n        .matches(/^[\\+]?[1-9][\\d]{0,15}$/, 'Please enter a valid phone number')\r\n        .required('Phone number is required'),\r\n\r\n    role: Yup.string()\r\n        .oneOf(['patient', 'doctor'], 'Please select a valid role')\r\n        .required('Role is required'),\r\n\r\n    location: Yup.string()\r\n        .min(3, 'Location must be at least 3 characters')\r\n        .max(100, 'Location must be less than 100 characters')\r\n        .required('Location is required'),\r\n});\r\n\r\n\r\nconst RegisterForm = () => {\r\n\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        role: 'patient',\r\n        location: '',\r\n    };\r\n\r\n    const handleSubmit = async (values, { setSubmitting, resetForm }: any) => {\r\n        try {\r\n            console.log('Registration data:', values);\r\n\r\n            // Simulate API call\r\n            await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n            toast({\r\n                title: \"Registration Successful!\",\r\n                description: `Welcome to MedConnect, ${values.name}! Your ${values.role} account has been created.`,\r\n                className: \"bg-medical text-primary-foreground\",\r\n            });\r\n\r\n            resetForm();\r\n        } catch (error) {\r\n            toast({\r\n                title: \"Registration Failed\",\r\n                description: \"There was an error creating your account. Please try again.\",\r\n                variant: \"destructive\",\r\n            });\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"w-full max-w-md mx-auto shadow-lg border-0 bg-card/95 backdrop-blur-sm\">\r\n            <CardHeader className=\"text-center space-y-2\">\r\n                <div className=\"mx-auto w-16 h-16 bg-medical/10 rounded-full flex items-center justify-center mb-4\">\r\n                    <User className=\"w-8 h-8 text-medical\" />\r\n                </div>\r\n                <CardTitle className=\"text-2xl font-bold text-medical\">Join MedConnect</CardTitle>\r\n                <CardDescription className=\"text-muted-foreground\">\r\n                    Create your account to connect with healthcare professionals\r\n                </CardDescription>\r\n            </CardHeader>\r\n\r\n            <CardContent>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={registerSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ isSubmitting, setFieldValue, values }) => (\r\n                        <Form className=\"space-y-4\">\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"name\" className=\"text-sm font-medium text-foreground\">\r\n                                    Full Name\r\n                                </Label>\r\n                                <Field\r\n                                    as={Input}\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter your full name\"\r\n                                    className=\"transition-all duration-200 focus:ring-2 focus:ring-medical/50\"\r\n                                />\r\n                                <ErrorMessage name=\"name\" component=\"div\" className=\"text-sm text-destructive animate-slide-in\" />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"email\" className=\"text-sm font-medium text-foreground\">\r\n                                    Email Address\r\n                                </Label>\r\n                                <Field\r\n                                    as={Input}\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter your email\"\r\n                                    className=\"transition-all duration-200 focus:ring-2 focus:ring-medical/50\"\r\n                                />\r\n                                <ErrorMessage name=\"email\" component=\"div\" className=\"text-sm text-destructive animate-slide-in\" />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"phone\" className=\"text-sm font-medium text-foreground\">\r\n                                    Phone Number\r\n                                </Label>\r\n                                <div className=\"relative\">\r\n                                    <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\r\n                                    <Field\r\n                                        as={Input}\r\n                                        id=\"phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"+1 (555) 123-4567\"\r\n                                        className=\"pl-10 transition-all duration-200 focus:ring-2 focus:ring-medical/50\"\r\n                                    />\r\n                                </div>\r\n                                <ErrorMessage name=\"phone\" component=\"div\" className=\"text-sm text-destructive animate-slide-in\" />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"role\" className=\"text-sm font-medium text-foreground\">\r\n                                    Role\r\n                                </Label>\r\n                                <Select\r\n                                    value={values.role}\r\n                                    onValueChange={(value) => setFieldValue('role', value)}\r\n                                >\r\n                                    <SelectTrigger className=\"transition-all duration-200 focus:ring-2 focus:ring-medical/50\">\r\n                                        <SelectValue placeholder=\"Select your role\" />\r\n                                    </SelectTrigger>\r\n                                    <SelectContent>\r\n                                        <SelectItem value=\"patient\" className=\"cursor-pointer\">\r\n                                            <div className=\"flex items-center space-x-2\">\r\n                                                <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\r\n                                                <span>Patient</span>\r\n                                            </div>\r\n                                        </SelectItem>\r\n                                        <SelectItem value=\"doctor\" className=\"cursor-pointer\">\r\n                                            <div className=\"flex items-center space-x-2\">\r\n                                                <div className=\"w-2 h-2 bg-medical rounded-full\"></div>\r\n                                                <span>Doctor</span>\r\n                                            </div>\r\n                                        </SelectItem>\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <ErrorMessage name=\"role\" component=\"div\" className=\"text-sm text-destructive animate-slide-in\" />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"location\" className=\"text-sm font-medium text-foreground\">\r\n                                    Location\r\n                                </Label>\r\n                                <Field\r\n                                    as={Input}\r\n                                    id=\"location\"\r\n                                    name=\"location\"\r\n                                    placeholder=\"City, State or Country\"\r\n                                    className=\"transition-all duration-200 focus:ring-2 focus:ring-medical/50\"\r\n                                />\r\n                                <ErrorMessage name=\"location\" component=\"div\" className=\"text-sm text-destructive animate-slide-in\" />\r\n                            </div>\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting}\r\n                                className=\"w-full bg-medical hover:bg-medical-dark text-primary-foreground font-medium py-2.5 transition-all duration-200 transform hover:scale-[1.02] disabled:opacity-70 disabled:cursor-not-allowed disabled:hover:scale-100\"\r\n                            >\r\n                                {isSubmitting ? (\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <div className=\"w-4 h-4 border-2 border-primary-foreground border-t-transparent rounded-full animate-spin\"></div>\r\n                                        <span>Creating Account...</span>\r\n                                    </div>\r\n                                ) : (\r\n                                    'Create Account'\r\n                                )}\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;"],"names":[],"mappings":"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","debugId":null}}]
}