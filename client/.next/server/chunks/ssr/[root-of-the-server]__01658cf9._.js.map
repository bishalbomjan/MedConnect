{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/appoi/page.tsx"],"sourcesContent":["'use client';\r\nimport React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Calendar, Heart } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { toast } from \"sonner\";\r\n\r\n// Validation schema\r\nconst appointmentSchema = Yup.object().shape({\r\n    appointmentDate: Yup.date()\r\n        .required('Please select an appointment date')\r\n        .min(new Date().toISOString().split('T')[0], 'Cannot select past dates')\r\n        .typeError('Please enter a valid date'),\r\n});\r\n\r\nconst AppointmentBooking = () => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    const handleSubmit = (values: { appointmentDate: string }) => {\r\n        console.log('Appointment booked for:', values.appointmentDate);\r\n        toast.success(`Appointment booked for ${new Date(values.appointmentDate).toLocaleDateString()}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-white\">\r\n            {/* Header */}\r\n            <header className=\"bg-green-600 shadow-sm\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n                            <Heart className=\"h-8 w-8 text-white\" />\r\n                            <h1 className=\"text-2xl font-bold text-white\">MedConnect</h1>\r\n                        </Link>\r\n                        <div className=\"flex space-x-4\">\r\n                            <Link href=\"/patient\">\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    className=\"border-white text-white hover:bg-green-500\"\r\n                                >\r\n                                    Back to Portal\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Main Content */}\r\n            <div className=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n                <div className=\"text-center mb-8\">\r\n                    <h2 className=\"text-3xl font-bold text-green-700 mb-2\">Book Your Appointment</h2>\r\n                    <p className=\"text-green-600\">Select your preferred date for the appointment</p>\r\n                </div>\r\n\r\n                <Card className=\"border-green-200 shadow-lg\">\r\n                    <CardHeader className=\"text-center\">\r\n                        <CardTitle className=\"flex items-center justify-center text-green-700\">\r\n                            <Calendar className=\"h-6 w-6 mr-2\" />\r\n                            Select Appointment Date\r\n                        </CardTitle>\r\n                        <CardDescription className=\"text-green-600\">\r\n                            Choose a date from today onwards for your medical appointment\r\n                        </CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <Formik\r\n                            initialValues={{ appointmentDate: '' }}\r\n                            validationSchema={appointmentSchema}\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            {({ isSubmitting, values }) => (\r\n                                <Form className=\"space-y-6\">\r\n                                    <div>\r\n                                        <label htmlFor=\"appointmentDate\" className=\"block text-sm font-medium text-green-700 mb-2\">\r\n                                            Appointment Date\r\n                                        </label>\r\n                                        <Field\r\n                                            type=\"date\"\r\n                                            id=\"appointmentDate\"\r\n                                            name=\"appointmentDate\"\r\n                                            min={today}\r\n                                            className=\"w-full px-4 py-3 border border-green-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 bg-white text-green-900 text-lg\"\r\n                                        />\r\n                                        <ErrorMessage\r\n                                            name=\"appointmentDate\"\r\n                                            component=\"div\"\r\n                                            className=\"mt-2 text-sm text-red-600 font-medium\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {values.appointmentDate && (\r\n                                        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                                            <div className=\"flex items-center\">\r\n                                                <Calendar className=\"h-5 w-5 text-green-600 mr-2\" />\r\n                                                <span className=\"text-green-800 font-medium\">\r\n                                                    Selected Date:{' '}\r\n                                                    {new Date(values.appointmentDate).toLocaleDateString('en-US', {\r\n                                                        weekday: 'long',\r\n                                                        year: 'numeric',\r\n                                                        month: 'long',\r\n                                                        day: 'numeric',\r\n                                                    })}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        disabled={isSubmitting}\r\n                                        className=\"w-full bg-green-600 hover:bg-green-700 text-white py-3 text-lg font-medium\"\r\n                                    >\r\n                                        {isSubmitting ? 'Booking...' : 'Book Appointment'}\r\n                                    </Button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                {/* Additional Info */}\r\n                <div className=\"mt-8 text-center\">\r\n                    <div className=\"bg-green-50 border border-green-200 rounded-lg p-6\">\r\n                        <h3 className=\"text-lg font-semibold text-green-800 mb-2\">Important Notes</h3>\r\n                        <ul className=\"text-sm text-green-700 space-y-1\">\r\n                            <li>• Appointments can only be booked for today or future dates</li>\r\n                            <li>• You will receive a confirmation email once your appointment is booked</li>\r\n                            <li>• Please arrive 15 minutes before your scheduled time</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentBooking;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}