{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/users/doctor/prescription/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Plus, Trash2, Save, FileText, User, Stethoscope, Pill } from 'lucide-react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Badge } from '@/components/ui/badge';\r\n\r\n\r\nconst medicationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Medication name is required'),\r\n    dosage: Yup.string(),\r\n    frequency: Yup.string(),\r\n    duration: Yup.string(),\r\n    instructions: Yup.string(),\r\n});\r\n\r\nconst prescriptionSchema = Yup.object().shape({\r\n    appointmentId: Yup.string().required('Appointment ID is required'),\r\n    doctorId: Yup.string().required('Doctor ID is required'),\r\n    patientId: Yup.string().required('Patient ID is required'),\r\n    medications: Yup.array().of(medicationSchema).min(1, 'At least one medication is required'),\r\n    notes: Yup.string(),\r\n});\r\n\r\nconst initialValues = {\r\n    appointmentId: '',\r\n    doctorId: 'doctor123',\r\n    patientId: '',\r\n    medications: [{ name: '', dosage: '', frequency: '', duration: '', instructions: '' }],\r\n    notes: '',\r\n};\r\n\r\nconst Prescription = () => {\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleSubmit = async (values: typeof initialValues, { resetForm }: any) => {\r\n        setIsSubmitting(true);\r\n        try {\r\n            // Simulate API call\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n            console.log('Prescription Data:', values);\r\n\r\n            toast({\r\n                title: \"Success!\",\r\n                description: \"Prescription has been created successfully.\",\r\n            });\r\n\r\n            resetForm();\r\n        } catch (error) {\r\n            toast({\r\n                title: \"Error\",\r\n                description: \"Failed to create prescription. Please try again.\",\r\n                variant: \"destructive\",\r\n            });\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-medconnect-pale-green\">\r\n            <div className=\"container mx-auto px-4 py-8\">\r\n                {/* Header */}\r\n                <div className=\"text-center mb-8\">\r\n                    <div className=\"flex items-center justify-center gap-2 mb-4\">\r\n                        <FileText className=\"h-8 w-8 text-medconnect-green\" />\r\n                        <h1 className=\"text-3xl font-bold text-medconnect-green\">\r\n                            MedConnect Prescription\r\n                        </h1>\r\n                    </div>\r\n                    <p className=\"text-gray-600\">Create and manage patient prescriptions</p>\r\n                </div>\r\n\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={prescriptionSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ values, errors, touched }) => (\r\n                        <Form className=\"max-w-4xl mx-auto space-y-6\">\r\n                            {/* Patient & Appointment Info */}\r\n                            <Card className=\"border-medconnect-light-green\">\r\n                                <CardHeader className=\"bg-medconnect-light-green\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-medconnect-green\">\r\n                                        <User className=\"h-5 w-5\" />\r\n                                        Patient & Appointment Information\r\n                                    </CardTitle>\r\n                                    <CardDescription>\r\n                                        Enter the patient and appointment details\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent className=\"p-6 space-y-4\">\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                                        <div>\r\n                                            <Label htmlFor=\"appointmentId\" className=\"text-medconnect-green font-medium\">\r\n                                                Appointment ID *\r\n                                            </Label>\r\n                                            <Field\r\n                                                as={Input}\r\n                                                id=\"appointmentId\"\r\n                                                name=\"appointmentId\"\r\n                                                placeholder=\"Enter appointment ID\"\r\n                                                className=\"mt-1\"\r\n                                            />\r\n                                            <ErrorMessage name=\"appointmentId\" component=\"p\" className=\"text-red-500 text-sm mt-1\" />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <Label htmlFor=\"patientId\" className=\"text-medconnect-green font-medium\">\r\n                                                Patient ID *\r\n                                            </Label>\r\n                                            <Field\r\n                                                as={Input}\r\n                                                id=\"patientId\"\r\n                                                name=\"patientId\"\r\n                                                placeholder=\"Enter patient ID\"\r\n                                                className=\"mt-1\"\r\n                                            />\r\n                                            <ErrorMessage name=\"patientId\" component=\"p\" className=\"text-red-500 text-sm mt-1\" />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <Label htmlFor=\"doctorId\" className=\"text-medconnect-green font-medium\">\r\n                                                Doctor ID *\r\n                                            </Label>\r\n                                            <Field\r\n                                                as={Input}\r\n                                                id=\"doctorId\"\r\n                                                name=\"doctorId\"\r\n                                                placeholder=\"Enter doctor ID\"\r\n                                                className=\"mt-1\"\r\n                                            />\r\n                                            <ErrorMessage name=\"doctorId\" component=\"p\" className=\"text-red-500 text-sm mt-1\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Medications */}\r\n                            <Card className=\"border-medconnect-light-green\">\r\n                                <CardHeader className=\"bg-medconnect-light-green\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-medconnect-green\">\r\n                                        <Pill className=\"h-5 w-5\" />\r\n                                        Medications\r\n                                    </CardTitle>\r\n                                    <CardDescription>\r\n                                        Add medications with dosage, frequency, and instructions\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent className=\"p-6\">\r\n                                    <FieldArray name=\"medications\">\r\n                                        {({ push, remove }) => (\r\n                                            <div className=\"space-y-6\">\r\n                                                {values.medications.map((medication, index) => (\r\n                                                    <div key={index} className=\"p-4 border border-medconnect-light-green rounded-lg bg-white\">\r\n                                                        <div className=\"flex justify-between items-center mb-4\">\r\n                                                            <Badge variant=\"outline\" className=\"text-medconnect-green border-medconnect-green\">\r\n                                                                Medication {index + 1}\r\n                                                            </Badge>\r\n                                                            {values.medications.length > 1 && (\r\n                                                                <Button\r\n                                                                    type=\"button\"\r\n                                                                    variant=\"outline\"\r\n                                                                    size=\"sm\"\r\n                                                                    onClick={() => remove(index)}\r\n                                                                    className=\"text-red-500 border-red-500 hover:bg-red-50\"\r\n                                                                >\r\n                                                                    <Trash2 className=\"h-4 w-4\" />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                                            <div className=\"md:col-span-2\">\r\n                                                                <Label className=\"text-medconnect-green font-medium\">\r\n                                                                    Medication Name *\r\n                                                                </Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.name`}\r\n                                                                    placeholder=\"Enter medication name\"\r\n                                                                    className=\"mt-1\"\r\n                                                                />\r\n                                                                <ErrorMessage\r\n                                                                    name={`medications.${index}.name`}\r\n                                                                    component=\"p\"\r\n                                                                    className=\"text-red-500 text-sm mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <Label className=\"text-medconnect-green font-medium\">\r\n                                                                    Dosage\r\n                                                                </Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.dosage`}\r\n                                                                    placeholder=\"e.g., 500mg\"\r\n                                                                    className=\"mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <Label className=\"text-medconnect-green font-medium\">\r\n                                                                    Frequency\r\n                                                                </Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.frequency`}\r\n                                                                    placeholder=\"e.g., Twice daily\"\r\n                                                                    className=\"mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <Label className=\"text-medconnect-green font-medium\">\r\n                                                                    Duration\r\n                                                                </Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.duration`}\r\n                                                                    placeholder=\"e.g., 7 days\"\r\n                                                                    className=\"mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <Label className=\"text-medconnect-green font-medium\">\r\n                                                                    Instructions\r\n                                                                </Label>\r\n                                                                <Field\r\n                                                                    as={Input}\r\n                                                                    name={`medications.${index}.instructions`}\r\n                                                                    placeholder=\"e.g., Take with food\"\r\n                                                                    className=\"mt-1\"\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n\r\n                                                <Button\r\n                                                    type=\"button\"\r\n                                                    variant=\"outline\"\r\n                                                    onClick={() => push({ name: '', dosage: '', frequency: '', duration: '', instructions: '' })}\r\n                                                    className=\"w-full border-medconnect-green text-medconnect-green hover:bg-medconnect-light-green\"\r\n                                                >\r\n                                                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                                                    Add Another Medication\r\n                                                </Button>\r\n\r\n                                                {errors.medications && typeof errors.medications === 'string' && (\r\n                                                    <p className=\"text-red-500 text-sm\">{errors.medications}</p>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </FieldArray>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Notes */}\r\n                            <Card className=\"border-medconnect-light-green\">\r\n                                <CardHeader className=\"bg-medconnect-light-green\">\r\n                                    <CardTitle className=\"flex items-center gap-2 text-medconnect-green\">\r\n                                        <Stethoscope className=\"h-5 w-5\" />\r\n                                        Additional Notes\r\n                                    </CardTitle>\r\n                                    <CardDescription>\r\n                                        Add any additional notes or recommendations\r\n                                    </CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent className=\"p-6\">\r\n                                    <Field\r\n                                        as={Textarea}\r\n                                        name=\"notes\"\r\n                                        placeholder=\"Enter any additional notes or recommendations...\"\r\n                                        className=\"min-h-[120px] resize-none\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Submit Button */}\r\n                            <div className=\"flex justify-center\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    disabled={isSubmitting}\r\n                                    className=\"bg-medconnect-green hover:bg-medconnect-green/90 text-white px-8 py-3 text-lg font-medium\"\r\n                                >\r\n                                    {isSubmitting ? (\r\n                                        <>\r\n                                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                                            Creating Prescription...\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Save className=\"h-5 w-5 mr-2\" />\r\n                                            Create Prescription\r\n                                        </>\r\n                                    )}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Prescription;"],"names":[],"mappings":"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","debugId":null}}]
}