{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"skeleton\"\r\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/app/users/doctor/profile/page.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport {\r\n  Calendar,\r\n  Mail,\r\n  MapPin,\r\n  Phone,\r\n  Award,\r\n  GraduationCap,\r\n  Star,\r\n  Clock,\r\n  User,\r\n  CheckCircle,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\n\r\n// Type definitions\r\ninterface DoctorProfile {\r\n  _id?: string;\r\n  fullname?: string;\r\n  degree?: string;\r\n  NMCID?: string;\r\n  specializations?: string[];\r\n  experience?: string;\r\n  experienceYear?: string;\r\n  price?: number;\r\n  uploadFiles?: string;\r\n  isKycSubmitted?: boolean;\r\n  isKycApproved?: boolean;\r\n  email?: string;\r\n  phoneNumber?: string;\r\n  location?: string;\r\n}\r\n\r\nexport default function DoctorProfile() {\r\n  const [profile, setProfile] = useState<DoctorProfile | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchDoctorProfile = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Simulate API call - replace with actual API calls\r\n      // const res = await apiClient.get(`/doctorkycs/${_id}`);\r\n      // if (res?.data?.kyc?.isKycSubmitted) {\r\n      //   setProfile(res.data.kyc);\r\n      // } else {\r\n      //   const response = await apiClient.get(`/user/${_id}`);\r\n      //   setProfile(response.data);\r\n      // }\r\n\r\n      // Mock data for demonstration\r\n      setTimeout(() => {\r\n        setProfile({\r\n          _id: \"6880dfdbc4278463b45f7ee6\",\r\n          fullname: \"Dr. Sarah Johnson\",\r\n          degree: \"MBBS, MD\",\r\n          NMCID: \"NMC12345\",\r\n          specializations: [\"Cardiology\", \"Internal Medicine\"],\r\n          experience:\r\n            \"Specialized in interventional cardiology with extensive experience in cardiac catheterization and preventive care.\",\r\n          experienceYear: \"8\",\r\n          price: 1500,\r\n          uploadFiles: \"doctor-profile.jpg\",\r\n          isKycSubmitted: true,\r\n          isKycApproved: true,\r\n          email: \"dr.sarah@hospital.com\",\r\n          phoneNumber: \"+977-9841234567\",\r\n          location: \"Kathmandu Medical Center\",\r\n        });\r\n        setLoading(false);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"Error fetching doctor profile:\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDoctorProfile();\r\n  }, []);\r\n\r\n  const getInitials = (name: string) => {\r\n    return (\r\n      name\r\n        ?.split(\" \")\r\n        .map((n) => n[0])\r\n        .join(\"\")\r\n        .toUpperCase() || \"DR\"\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-medconnect-pale-green p-6\">\r\n        <div className=\"max-w-4xl mx-auto space-y-6\">\r\n          <Card className=\"shadow-xl\">\r\n            <CardContent className=\"p-8\">\r\n              <div className=\"flex flex-col lg:flex-row items-center lg:items-start space-y-6 lg:space-y-0 lg:space-x-8\">\r\n                <Skeleton className=\"w-32 h-32 rounded-full\" />\r\n                <div className=\"flex-1 space-y-4\">\r\n                  <Skeleton className=\"h-8 w-64\" />\r\n                  <Skeleton className=\"h-4 w-48\" />\r\n                  <div className=\"flex gap-2\">\r\n                    <Skeleton className=\"h-6 w-24\" />\r\n                    <Skeleton className=\"h-6 w-32\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!profile) {\r\n    return (\r\n      <div className=\"min-h-screen bg-medconnect-pale-green flex items-center justify-center p-6\">\r\n        <Card className=\"max-w-md w-full shadow-xl\">\r\n          <CardContent className=\"pt-6 text-center\">\r\n            <AlertCircle className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\r\n            <p className=\"text-muted-foreground text-lg\">\r\n              No profile data available.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-medconnect-pale-green\">\r\n      <div className=\"max-w-4xl mx-auto p-6 space-y-8\">\r\n        {/* Main Profile Card */}\r\n        <Card className=\"shadow-xl overflow-hidden\">\r\n          <div className=\"bg-medconnect-green p-8 text-white\">\r\n            <div className=\"flex flex-col lg:flex-row items-center lg:items-start space-y-6 lg:space-y-0 lg:space-x-8\">\r\n              <div className=\"relative\">\r\n                <Avatar className=\"w-32 h-32 border-4 border-white shadow-xl\">\r\n                  {profile.uploadFiles ? (\r\n                    <AvatarImage\r\n                      src={`http://localhost:8080/images/${profile.uploadFiles}`}\r\n                      alt={profile.fullname}\r\n                    />\r\n                  ) : (\r\n                    <AvatarFallback className=\"text-3xl font-bold bg-medconnect-light-green text-medconnect-green\">\r\n                      {getInitials(profile.fullname || \"Doctor\")}\r\n                    </AvatarFallback>\r\n                  )}\r\n                </Avatar>\r\n                {profile.isKycApproved && (\r\n                  <div className=\"absolute -bottom-2 -right-2\">\r\n                    <Badge className=\"bg-white text-medconnect-green hover:bg-gray-100 px-3 py-1 rounded-full shadow-lg\">\r\n                      <CheckCircle className=\"w-4 h-4 mr-1\" />\r\n                      Verified\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex-1 text-center lg:text-left space-y-4\">\r\n                <div>\r\n                  <h1 className=\"text-4xl font-bold mb-2\">\r\n                    {profile.fullname || \"Doctor Profile\"}\r\n                  </h1>\r\n                  {profile.degree && (\r\n                    <div className=\"flex flex-wrap justify-center lg:justify-start gap-3 mb-4\">\r\n                      <Badge\r\n                        variant=\"secondary\"\r\n                        className=\"text-lg px-4 py-2 bg-white/20 text-white border-white/30\"\r\n                      >\r\n                        <GraduationCap className=\"w-5 h-5 mr-2\" />\r\n                        {profile.degree}\r\n                      </Badge>\r\n                      {profile.experienceYear && (\r\n                        <Badge\r\n                          variant=\"secondary\"\r\n                          className=\"text-lg px-4 py-2 bg-white/20 text-white border-white/30\"\r\n                        >\r\n                          <Clock className=\"w-5 h-5 mr-2\" />\r\n                          {profile.experienceYear} Years Experience\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {profile.specializations &&\r\n                    profile.specializations.length > 0 && (\r\n                      <div className=\"flex flex-wrap justify-center lg:justify-start gap-2\">\r\n                        {profile.specializations.map((spec, index) => (\r\n                          <Badge\r\n                            key={index}\r\n                            className=\"bg-white/10 text-white border-white/30 px-3 py-1\"\r\n                          >\r\n                            {spec}\r\n                          </Badge>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"flex flex-wrap justify-center lg:justify-start gap-6 text-white/90\">\r\n                  {profile.email && (\r\n                    <div className=\"flex items-center\">\r\n                      <Mail className=\"w-5 h-5 mr-2\" />\r\n                      <span>{profile.email}</span>\r\n                    </div>\r\n                  )}\r\n                  {profile.phoneNumber && (\r\n                    <div className=\"flex items-center\">\r\n                      <Phone className=\"w-5 h-5 mr-2\" />\r\n                      <span>{profile.phoneNumber}</span>\r\n                    </div>\r\n                  )}\r\n                  {profile.location && (\r\n                    <div className=\"flex items-center\">\r\n                      <MapPin className=\"w-5 h-5 mr-2\" />\r\n                      <span>{profile.location}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* KYC Status and Details */}\r\n          {profile.isKycSubmitted ? (\r\n            <CardContent className=\"p-8\">\r\n              <div className=\"grid gap-8 md:grid-cols-2\">\r\n                <div className=\"space-y-6\">\r\n                  {profile.NMCID && (\r\n                    <div className=\"p-6 bg-medconnect-light-green rounded-xl\">\r\n                      <h3 className=\"font-semibold text-medconnect-green mb-3 flex items-center\">\r\n                        <Award className=\"w-5 h-5 mr-2\" />\r\n                        Medical License\r\n                      </h3>\r\n                      <p className=\"text-2xl font-bold text-medconnect-green\">\r\n                        #{profile.NMCID}\r\n                      </p>\r\n                      <p className=\"text-sm text-medconnect-green/70 mt-1\">\r\n                        Nepal Medical Council\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {profile.price && (\r\n                    <div className=\"p-6 bg-green-50 rounded-xl\">\r\n                      <h3 className=\"font-semibold text-green-800 mb-3 flex items-center\">\r\n                        <Star className=\"w-5 h-5 mr-2\" />\r\n                        Consultation Fee\r\n                      </h3>\r\n                      <p className=\"text-2xl font-bold text-green-600\">\r\n                        Rs. {profile.price}\r\n                      </p>\r\n                      <p className=\"text-sm text-green-600/70 mt-1\">\r\n                        Per Session\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"space-y-6\">\r\n                  {profile.experience && (\r\n                    <div className=\"p-6 bg-blue-50 rounded-xl\">\r\n                      <h3 className=\"font-semibold text-blue-800 mb-3 flex items-center\">\r\n                        <User className=\"w-5 h-5 mr-2\" />\r\n                        Professional Experience\r\n                      </h3>\r\n                      <p className=\"text-gray-700 leading-relaxed\">\r\n                        {profile.experience}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"p-6 bg-orange-50 rounded-xl\">\r\n                    <h3 className=\"font-semibold text-orange-800 mb-3\">\r\n                      Verification Status\r\n                    </h3>\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex items-center\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mr-2\" />\r\n                        <span className=\"text-green-700 font-medium\">\r\n                          KYC Submitted\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        {profile.isKycApproved ? (\r\n                          <>\r\n                            <CheckCircle className=\"w-5 h-5 text-green-500 mr-2\" />\r\n                            <span className=\"text-green-700 font-medium\">\r\n                              KYC Approved\r\n                            </span>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Clock className=\"w-5 h-5 text-orange-500 mr-2\" />\r\n                            <span className=\"text-orange-700 font-medium\">\r\n                              KYC Pending\r\n                            </span>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          ) : (\r\n            // Basic Profile (KYC not submitted)\r\n            <CardContent className=\"p-8\">\r\n              <div className=\"text-center space-y-6\">\r\n                <div className=\"p-6 bg-gray-50 rounded-xl\">\r\n                  <AlertCircle className=\"w-12 h-12 text-orange-500 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n                    Basic Profile\r\n                  </h3>\r\n                  <p className=\"text-gray-600\">\r\n                    Complete KYC verification to unlock full profile features\r\n                  </p>\r\n                  <div className=\"mt-4 space-y-2\">\r\n                    {profile.email && (\r\n                      <p className=\"text-gray-700\">\r\n                        <Mail className=\"w-4 h-4 inline mr-2\" />\r\n                        {profile.email}\r\n                      </p>\r\n                    )}\r\n                    {profile.phoneNumber && (\r\n                      <p className=\"text-gray-700\">\r\n                        <Phone className=\"w-4 h-4 inline mr-2\" />\r\n                        {profile.phoneNumber}\r\n                      </p>\r\n                    )}\r\n                    {profile.location && (\r\n                      <p className=\"text-gray-700\">\r\n                        <MapPin className=\"w-4 h-4 inline mr-2\" />\r\n                        {profile.location}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n\r\n        {/* Action Buttons */}\r\n        <Card className=\"shadow-xl\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex flex-wrap gap-4 justify-center\">\r\n              <Button\r\n                size=\"lg\"\r\n                className=\"bg-medconnect-green hover:bg-medconnect-green/90\"\r\n              >\r\n                <Calendar className=\"w-5 h-5 mr-2\" />\r\n                Book Appointment\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"lg\"\r\n                className=\"border-2 border-medconnect-green text-medconnect-green hover:bg-medconnect-light-green\"\r\n              >\r\n                <Mail className=\"w-5 h-5 mr-2\" />\r\n                Send Message\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"lg\"\r\n                className=\"border-2 border-green-600 text-green-600 hover:bg-green-50\"\r\n              >\r\n                <Star className=\"w-5 h-5 mr-2\" />\r\n                Rate Doctor\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAOA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAgCe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,qBAAqB;QACzB,IAAI;YACF,WAAW;YACX,oDAAoD;YACpD,yDAAyD;YACzD,wCAAwC;YACxC,8BAA8B;YAC9B,WAAW;YACX,0DAA0D;YAC1D,+BAA+B;YAC/B,IAAI;YAEJ,8BAA8B;YAC9B,WAAW;gBACT,WAAW;oBACT,KAAK;oBACL,UAAU;oBACV,QAAQ;oBACR,OAAO;oBACP,iBAAiB;wBAAC;wBAAc;qBAAoB;oBACpD,YACE;oBACF,gBAAgB;oBAChB,OAAO;oBACP,aAAa;oBACb,gBAAgB;oBAChB,eAAe;oBACf,OAAO;oBACP,aAAa;oBACb,UAAU;gBACZ;gBACA,WAAW;YACb,GAAG;QACL,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,WAAW;QACb;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,cAAc,CAAC;QACnB,OACE,MACI,MAAM,KACP,IAAI,CAAC,IAAM,CAAC,CAAC,EAAE,EACf,KAAK,IACL,iBAAiB;IAExB;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;8BACd,cAAA,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;kCACrB,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,oIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC,oIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAStC;IAEA,IAAI,CAAC,SAAS;QACZ,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;0BACd,cAAA,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,8OAAC,oNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;sCACvB,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;;;;;;;;;;;IAOvD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAO,WAAU;0DACf,QAAQ,WAAW,iBAClB,8OAAC;oDACC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,WAAW,EAAE;oDAC1D,KAAK,QAAQ,QAAQ;;;;;yEAGvB,8OAAC;oDAAe,WAAU;8DACvB,YAAY,QAAQ,QAAQ,IAAI;;;;;;;;;;;4CAItC,QAAQ,aAAa,kBACpB,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,iIAAA,CAAA,QAAK;oDAAC,WAAU;;sEACf,8OAAC,2NAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;;;;;;;kDAOhD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAG,WAAU;kEACX,QAAQ,QAAQ,IAAI;;;;;;oDAEtB,QAAQ,MAAM,kBACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,iIAAA,CAAA,QAAK;gEACJ,SAAQ;gEACR,WAAU;;kFAEV,8OAAC,wNAAA,CAAA,gBAAa;wEAAC,WAAU;;;;;;oEACxB,QAAQ,MAAM;;;;;;;4DAEhB,QAAQ,cAAc,kBACrB,8OAAC,iIAAA,CAAA,QAAK;gEACJ,SAAQ;gEACR,WAAU;;kFAEV,8OAAC,oMAAA,CAAA,QAAK;wEAAC,WAAU;;;;;;oEAChB,QAAQ,cAAc;oEAAC;;;;;;;;;;;;;oDAM/B,QAAQ,eAAe,IACtB,QAAQ,eAAe,CAAC,MAAM,GAAG,mBAC/B,8OAAC;wDAAI,WAAU;kEACZ,QAAQ,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,sBAClC,8OAAC,iIAAA,CAAA,QAAK;gEAEJ,WAAU;0EAET;+DAHI;;;;;;;;;;;;;;;;0DAUjB,8OAAC;gDAAI,WAAU;;oDACZ,QAAQ,KAAK,kBACZ,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;0EAChB,8OAAC;0EAAM,QAAQ,KAAK;;;;;;;;;;;;oDAGvB,QAAQ,WAAW,kBAClB,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,oMAAA,CAAA,QAAK;gEAAC,WAAU;;;;;;0EACjB,8OAAC;0EAAM,QAAQ,WAAW;;;;;;;;;;;;oDAG7B,QAAQ,QAAQ,kBACf,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0MAAA,CAAA,SAAM;gEAAC,WAAU;;;;;;0EAClB,8OAAC;0EAAM,QAAQ,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBASlC,QAAQ,cAAc,iBACrB,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;sCACrB,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;4CACZ,QAAQ,KAAK,kBACZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;;0EACZ,8OAAC,oMAAA,CAAA,QAAK;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;kEAGpC,8OAAC;wDAAE,WAAU;;4DAA2C;4DACpD,QAAQ,KAAK;;;;;;;kEAEjB,8OAAC;wDAAE,WAAU;kEAAwC;;;;;;;;;;;;4CAMxD,QAAQ,KAAK,kBACZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;;0EACZ,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;kEAGnC,8OAAC;wDAAE,WAAU;;4DAAoC;4DAC1C,QAAQ,KAAK;;;;;;;kEAEpB,8OAAC;wDAAE,WAAU;kEAAiC;;;;;;;;;;;;;;;;;;kDAOpD,8OAAC;wCAAI,WAAU;;4CACZ,QAAQ,UAAU,kBACjB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;;0EACZ,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;kEAGnC,8OAAC;wDAAE,WAAU;kEACV,QAAQ,UAAU;;;;;;;;;;;;0DAKzB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAAqC;;;;;;kEAGnD,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;;kFACb,8OAAC,2NAAA,CAAA,cAAW;wEAAC,WAAU;;;;;;kFACvB,8OAAC;wEAAK,WAAU;kFAA6B;;;;;;;;;;;;0EAI/C,8OAAC;gEAAI,WAAU;0EACZ,QAAQ,aAAa,iBACpB;;sFACE,8OAAC,2NAAA,CAAA,cAAW;4EAAC,WAAU;;;;;;sFACvB,8OAAC;4EAAK,WAAU;sFAA6B;;;;;;;iGAK/C;;sFACE,8OAAC,oMAAA,CAAA,QAAK;4EAAC,WAAU;;;;;;sFACjB,8OAAC;4EAAK,WAAU;sFAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAY9D,oCAAoC;sCACpC,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;sCACrB,cAAA,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,8OAAC;4CAAG,WAAU;sDAA2C;;;;;;sDAGzD,8OAAC;4CAAE,WAAU;sDAAgB;;;;;;sDAG7B,8OAAC;4CAAI,WAAU;;gDACZ,QAAQ,KAAK,kBACZ,8OAAC;oDAAE,WAAU;;sEACX,8OAAC,kMAAA,CAAA,OAAI;4DAAC,WAAU;;;;;;wDACf,QAAQ,KAAK;;;;;;;gDAGjB,QAAQ,WAAW,kBAClB,8OAAC;oDAAE,WAAU;;sEACX,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;wDAChB,QAAQ,WAAW;;;;;;;gDAGvB,QAAQ,QAAQ,kBACf,8OAAC;oDAAE,WAAU;;sEACX,8OAAC,0MAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;wDACjB,QAAQ,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAWjC,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;8BACd,cAAA,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;kCACrB,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,kIAAA,CAAA,SAAM;oCACL,MAAK;oCACL,WAAU;;sDAEV,8OAAC,0MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;8CAGvC,8OAAC,kIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAU;;sDAEV,8OAAC,kMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;8CAGnC,8OAAC,kIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAU;;sDAEV,8OAAC,kMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASjD","debugId":null}}]
}