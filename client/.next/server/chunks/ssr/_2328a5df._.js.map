{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,8DACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,8DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,0CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/doctorKYC/page.tsx"],"sourcesContent":["import { useFormik } from \"formik\";\r\nimport { toast } from 'sonner'\r\nimport * as Yup from \"yup\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useState } from \"react\";\r\nimport { Plus, Minus, FileText, User, GraduationCap, Award, Calendar, DollarSign, Upload, Stethoscope, Heart, Sun, AlertCircle, Activity, Cross, Brain, Baby, Shield, Eye, Smile, Radiation, Droplet } from \"lucide-react\";\r\n\r\nconst specializations = [\r\n    { name: 'Cardiology', icon: Heart },\r\n    { name: 'Dermatology', icon: Sun },\r\n    { name: 'Emergency Medicine', icon: AlertCircle },\r\n    { name: 'Endocrinology', icon: Activity },\r\n    { name: 'Family Medicine', icon: User },\r\n    { name: 'Gastroenterology', icon: Stethoscope },\r\n    { name: 'General Surgery', icon: Cross },\r\n    { name: 'Internal Medicine', icon: Stethoscope },\r\n    { name: 'Neurology', icon: Brain },\r\n    { name: 'Obstetrics and Gynecology', icon: Baby },\r\n    { name: 'Oncology', icon: Shield },\r\n    { name: 'Ophthalmology', icon: Eye },\r\n    { name: 'Orthopedics', icon: GraduationCap },\r\n    { name: 'Pediatrics', icon: Smile },\r\n    { name: 'Psychiatry', icon: Brain },\r\n    { name: 'Radiology', icon: Radiation },\r\n    { name: 'Urology', icon: Droplet }\r\n];\r\n\r\nconst DoctorKyc = ({ _id }: { _id: string }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fullname: \"\",\r\n            degree: \"\",\r\n            NMCID: \"\",\r\n            specializations: [\"\"],\r\n            experience: [{ body: \"\", date: \"\" }],\r\n            experienceYear: \"\",\r\n            price: \"\",\r\n            profilePicture: null,\r\n        },\r\n        validationSchema: Yup.object({\r\n            fullname: Yup.string().required(\"Full name is required\"),\r\n            degree: Yup.string().required(\"Degree is required\"),\r\n            NMCID: Yup.string().required(\"NMC ID is required\"),\r\n            specializations: Yup.array().of(Yup.string().required(\"Required\")),\r\n            experience: Yup.array().of(\r\n                Yup.object({\r\n                    body: Yup.string().required(\"Experience description is required\"),\r\n                    date: Yup.date().required(\"Date is required\"),\r\n                })\r\n            ),\r\n            experienceYear: Yup.string().required(\"Experience year is required\"),\r\n            price: Yup.number().required(\"Price is required\"),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            try {\r\n                // Simulated API call - replace with your actual API client\r\n                const formData = new FormData();\r\n                for (const key in values) {\r\n                    if (key === \"experience\" || key === \"specializations\") {\r\n                        formData.append(key, JSON.stringify(values[key]));\r\n                    } else if (key === \"profilePicture\" && values[key]) {\r\n                        formData.append(\"profilePicture\", values[key]);\r\n                    } else {\r\n                        formData.append(key, values[key]);\r\n                    }\r\n                }\r\n\r\n                // Replace this with your actual API call\r\n                // const response = await apiClient.post(`/doctorkycs/${_id}`, formData, {\r\n                //     headers: {\r\n                //         \"Content-Type\": \"multipart/form-data\",\r\n                //     },\r\n                // });\r\n\r\n                toast.success(\"KYC information submitted successfully!\");\r\n            } catch (err: any) {\r\n                console.error(err);\r\n                toast.error(err.response?.data?.message || \"KYC submission failed\");\r\n            }\r\n        },\r\n    });\r\n\r\n    const {\r\n        values,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n    } = formik;\r\n\r\n    const addSpecialization = () => {\r\n        setFieldValue(\"specializations\", [...values.specializations, \"\"]);\r\n    };\r\n\r\n    const removeSpecialization = (index: number) => {\r\n        const newSpecs = values.specializations.filter((_, i) => i !== index);\r\n        setFieldValue(\"specializations\", newSpecs);\r\n    };\r\n\r\n    const addExperience = () => {\r\n        setFieldValue(\"experience\", [...values.experience, { body: \"\", date: \"\" }]);\r\n    };\r\n\r\n    const removeExperience = (index: number) => {\r\n        const newExp = values.experience.filter((_, i) => i !== index);\r\n        setFieldValue(\"experience\", newExp);\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-medical-light via-background to-medical-secondary/30 py-8 px-4\">\r\n            <div className=\"max-w-4xl mx-auto\">\r\n                <div className=\"text-center mb-8\">\r\n                    <div className=\"flex items-center justify-center mb-4\">\r\n                        <div className=\"p-3 rounded-full bg-medical-primary/10 mr-3\">\r\n                            <Stethoscope className=\"h-8 w-8 text-medical-primary\" />\r\n                        </div>\r\n                        <h1 className=\"text-4xl font-bold text-medical-primary\">Doctor KYC Verification</h1>\r\n                    </div>\r\n                    <p className=\"text-medical-accent text-lg\">Complete your profile to start practicing</p>\r\n                </div>\r\n\r\n                <Card className=\"shadow-[var(--shadow-medical)] border-medical-secondary/50 backdrop-blur-sm bg-white/95\">\r\n                    <CardHeader className=\"bg-gradient-to-r from-medical-primary to-medical-accent text-white rounded-t-lg\">\r\n                        <CardTitle className=\"text-2xl flex items-center\">\r\n                            <FileText className=\"mr-3 h-6 w-6\" />\r\n                            Professional Information\r\n                        </CardTitle>\r\n                        <CardDescription className=\"text-white/90\">\r\n                            Please fill in your professional details accurately\r\n                        </CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"p-8\">\r\n                        <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n                            {/* Personal Information Section */}\r\n                            <div className=\"space-y-6\">\r\n                                <div className=\"flex items-center mb-4\">\r\n                                    <User className=\"h-5 w-5 text-medical-primary mr-2\" />\r\n                                    <h3 className=\"text-xl font-semibold text-medical-primary\">Personal Information</h3>\r\n                                </div>\r\n\r\n                                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"fullname\" className=\"text-medical-primary font-medium flex items-center\">\r\n                                            <User className=\"h-4 w-4 mr-1\" />\r\n                                            Full Name *\r\n                                        </Label>\r\n                                        <Input\r\n                                            id=\"fullname\"\r\n                                            name=\"fullname\"\r\n                                            value={values.fullname}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200\"\r\n                                            placeholder=\"Enter your full name\"\r\n                                        />\r\n                                        {touched.fullname && errors.fullname && (\r\n                                            <p className=\"text-destructive text-sm flex items-center\">\r\n                                                <span className=\"mr-1\">⚠</span>\r\n                                                {errors.fullname}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"NMCID\" className=\"text-medical-primary font-medium flex items-center\">\r\n                                            <Award className=\"h-4 w-4 mr-1\" />\r\n                                            NMC ID *\r\n                                        </Label>\r\n                                        <Input\r\n                                            id=\"NMCID\"\r\n                                            name=\"NMCID\"\r\n                                            value={values.NMCID}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200\"\r\n                                            placeholder=\"Enter your NMC ID\"\r\n                                        />\r\n                                        {touched.NMCID && errors.NMCID && (\r\n                                            <p className=\"text-destructive text-sm flex items-center\">\r\n                                                <span className=\"mr-1\">⚠</span>\r\n                                                {errors.NMCID}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-2\">\r\n                                    <Label htmlFor=\"degree\" className=\"text-medical-primary font-medium flex items-center\">\r\n                                        <GraduationCap className=\"h-4 w-4 mr-1\" />\r\n                                        Medical Degree *\r\n                                    </Label>\r\n                                    <Input\r\n                                        id=\"degree\"\r\n                                        name=\"degree\"\r\n                                        value={values.degree}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200\"\r\n                                        placeholder=\"e.g., MBBS, MD, MS\"\r\n                                    />\r\n                                    {touched.degree && errors.degree && (\r\n                                        <p className=\"text-destructive text-sm flex items-center\">\r\n                                            <span className=\"mr-1\">⚠</span>\r\n                                            {errors.degree}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Specializations Section */}\r\n                            <div className=\"space-y-6 border-t border-medical-secondary/30 pt-6\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center\">\r\n                                        <Award className=\"h-5 w-5 text-green-600 mr-2\" />\r\n                                        <h3 className=\"text-xl font-semibold text-green-600\">Specializations</h3>\r\n                                    </div>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        onClick={addSpecialization}\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        className=\"border-green-500 text-green-600 hover:bg-green-500 hover:text-white transition-all duration-200\"\r\n                                    >\r\n                                        <Plus className=\"h-4 w-4 mr-1\" />\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-3\">\r\n                                    {values.specializations.map((spec, index) => (\r\n                                        <div key={index} className=\"flex gap-2\">\r\n                                            <Select\r\n                                                value={spec}\r\n                                                onValueChange={(value) => {\r\n                                                    const newSpecs = [...values.specializations];\r\n                                                    newSpecs[index] = value;\r\n                                                    setFieldValue(\"specializations\", newSpecs);\r\n                                                }}\r\n                                            >\r\n                                                <SelectTrigger className=\"border-green-300 focus:border-green-500 focus:ring-green-500/20 transition-all duration-200\">\r\n                                                    <SelectValue placeholder={`Select specialization #${index + 1}`} />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent className=\"bg-white border-green-200 shadow-lg\">\r\n                                                    {specializations.map((specialization) => {\r\n                                                        const IconComponent = specialization.icon;\r\n                                                        return (\r\n                                                            <SelectItem\r\n                                                                key={specialization.name}\r\n                                                                value={specialization.name}\r\n                                                                className=\"text-green-700 hover:bg-green-50 focus:bg-green-100 cursor-pointer\"\r\n                                                            >\r\n                                                                <div className=\"flex items-center\">\r\n                                                                    <IconComponent className=\"h-4 w-4 mr-2 text-green-600\" />\r\n                                                                    {specialization.name}\r\n                                                                </div>\r\n                                                            </SelectItem>\r\n                                                        );\r\n                                                    })}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                            {values.specializations.length > 1 && (\r\n                                                <Button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => removeSpecialization(index)}\r\n                                                    variant=\"outline\"\r\n                                                    size=\"sm\"\r\n                                                    className=\"border-red-300 text-red-600 hover:bg-red-50 hover:text-red-700 px-3\"\r\n                                                >\r\n                                                    <Minus className=\"h-4 w-4\" />\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Experience Section */}\r\n                            <div className=\"space-y-6 border-t border-medical-secondary/30 pt-6\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center\">\r\n                                        <Calendar className=\"h-5 w-5 text-medical-primary mr-2\" />\r\n                                        <h3 className=\"text-xl font-semibold text-medical-primary\">Professional Experience</h3>\r\n                                    </div>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        onClick={addExperience}\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        className=\"border-green-500 text-green-600 hover:bg-green-500 hover:text-white transition-all duration-200\"\r\n                                    >\r\n                                        <Plus className=\"h-4 w-4 mr-1\" />\r\n                                        Add Experience\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"experienceYear\" className=\"text-medical-primary font-medium flex items-center\">\r\n                                            <Calendar className=\"h-4 w-4 mr-1\" />\r\n                                            Years of Experience *\r\n                                        </Label>\r\n                                        <Input\r\n                                            id=\"experienceYear\"\r\n                                            name=\"experienceYear\"\r\n                                            value={values.experienceYear}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200\"\r\n                                            placeholder=\"e.g., 5 years\"\r\n                                        />\r\n                                        {touched.experienceYear && errors.experienceYear && (\r\n                                            <p className=\"text-destructive text-sm flex items-center\">\r\n                                                <span className=\"mr-1\">⚠</span>\r\n                                                {errors.experienceYear}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"price\" className=\"text-medical-primary font-medium flex items-center\">\r\n                                            <DollarSign className=\"h-4 w-4 mr-1\" />\r\n                                            Consultation Fee (NPR) *\r\n                                        </Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            id=\"price\"\r\n                                            name=\"price\"\r\n                                            value={values.price}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200\"\r\n                                            placeholder=\"e.g., 1500\"\r\n                                        />\r\n                                        {touched.price && errors.price && (\r\n                                            <p className=\"text-destructive text-sm flex items-center\">\r\n                                                <span className=\"mr-1\">⚠</span>\r\n                                                {errors.price}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-4\">\r\n                                    {values.experience.map((exp, index) => (\r\n                                        <Card key={index} className=\"border-medical-secondary/30 bg-medical-light/30\">\r\n                                            <CardContent className=\"p-4\">\r\n                                                <div className=\"flex justify-between items-start mb-3\">\r\n                                                    <h4 className=\"font-medium text-medical-primary\">Experience #{index + 1}</h4>\r\n                                                    {values.experience.length > 1 && (\r\n                                                        <Button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeExperience(index)}\r\n                                                            variant=\"outline\"\r\n                                                            size=\"sm\"\r\n                                                            className=\"border-destructive text-destructive hover:bg-destructive hover:text-white\"\r\n                                                        >\r\n                                                            <Minus className=\"h-4 w-4\" />\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"space-y-3\">\r\n                                                    <Textarea\r\n                                                        name={`experience[${index}].body`}\r\n                                                        placeholder=\"Describe your experience, role, and achievements...\"\r\n                                                        value={exp.body}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200 min-h-[100px]\"\r\n                                                    />\r\n                                                    <Input\r\n                                                        type=\"date\"\r\n                                                        name={`experience[${index}].date`}\r\n                                                        value={exp.date}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className=\"border-medical-secondary/50 focus:border-medical-primary focus:ring-medical-primary/20 transition-all duration-200\"\r\n                                                    />\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Profile Picture Section */}\r\n                            <div className=\"space-y-4 border-t border-medical-secondary/30 pt-6\">\r\n                                <div className=\"flex items-center mb-4\">\r\n                                    <Upload className=\"h-5 w-5 text-medical-primary mr-2\" />\r\n                                    <h3 className=\"text-xl font-semibold text-medical-primary\">Profile Picture</h3>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-2\">\r\n                                    <Label htmlFor=\"profilePicture\" className=\"text-medical-primary font-medium flex items-center\">\r\n                                        <Upload className=\"h-4 w-4 mr-1\" />\r\n                                        Upload Profile Picture (Optional)\r\n                                    </Label>\r\n                                    <div className=\"relative\">\r\n                                        <input\r\n                                            id=\"profilePicture\"\r\n                                            name=\"profilePicture\"\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={(event) =>\r\n                                                setFieldValue(\"profilePicture\", event.currentTarget.files?.[0])\r\n                                            }\r\n                                            className=\"block w-full text-sm text-medical-primary border border-medical-secondary/50 rounded-lg file:mr-4 file:py-3 file:px-6 file:border-0 file:text-sm file:bg-medical-primary file:text-white hover:file:bg-medical-accent file:rounded-l-lg transition-all duration-200 cursor-pointer\"\r\n                                        />\r\n                                    </div>\r\n                                    <p className=\"text-sm text-muted-foreground\">\r\n                                        Accepted formats: JPG, PNG, GIF (Max 5MB)\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Submit Button */}\r\n                            <div className=\"pt-6 border-t border-medical-secondary/30\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"w-full bg-gradient-to-r from-medical-primary to-medical-accent hover:from-medical-accent hover:to-medical-primary text-white py-3 text-lg font-semibold shadow-[var(--shadow-medical)] transition-all duration-300 transform hover:scale-[1.02]\"\r\n                                    size=\"lg\"\r\n                                >\r\n                                    <FileText className=\"mr-2 h-5 w-5\" />\r\n                                    Submit KYC Verification\r\n                                </Button>\r\n                                <p className=\"text-center text-sm text-muted-foreground mt-3\">\r\n                                    By submitting, you agree to our terms and conditions\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorKyc;"],"names":[],"mappings":"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","debugId":null}}]
}