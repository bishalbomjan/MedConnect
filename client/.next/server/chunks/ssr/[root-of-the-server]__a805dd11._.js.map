{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useTheme } from \"next-themes\"\r\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme()\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      style={\r\n        {\r\n          \"--normal-bg\": \"var(--popover)\",\r\n          \"--normal-text\": \"var(--popover-foreground)\",\r\n          \"--normal-border\": \"var(--border)\",\r\n        } as React.CSSProperties\r\n      }\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Toaster }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,8OAAC,wIAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/reducerSlices/boxSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const boxSlice = createSlice({\r\n  name: \"box\",\r\n  initialState: {\r\n    backgroundColor: \"red\",\r\n    width: 200,\r\n    height: 200,\r\n    marginLeft: 0,\r\n    borderRadius: 0,\r\n  },\r\n  reducers: {\r\n    incrementHeight: (state) => {\r\n      state.height = state.height + 10;\r\n    },\r\n    incrementWidth: (state) => {\r\n      state.width = state.width + 10;\r\n    },\r\n    incrementMarginLeft: (state) => {\r\n      state.marginLeft = state.marginLeft + 10;\r\n    },\r\n    changeColor: (state, action) => {\r\n      state.backgroundColor = action.payload;\r\n    },\r\n    changeToCircle: (state) => {\r\n      state.borderRadius = \"100%\";\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  incrementHeight,\r\n  incrementWidth,\r\n  changeColor,\r\n  incrementMarginLeft,\r\n  changeToCircle,\r\n} = boxSlice.actions;\r\n\r\nexport default boxSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAClC,MAAM;IACN,cAAc;QACZ,iBAAiB;QACjB,OAAO;QACP,QAAQ;QACR,YAAY;QACZ,cAAc;IAChB;IACA,UAAU;QACR,iBAAiB,CAAC;YAChB,MAAM,MAAM,GAAG,MAAM,MAAM,GAAG;QAChC;QACA,gBAAgB,CAAC;YACf,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG;QAC9B;QACA,qBAAqB,CAAC;YACpB,MAAM,UAAU,GAAG,MAAM,UAAU,GAAG;QACxC;QACA,aAAa,CAAC,OAAO;YACnB,MAAM,eAAe,GAAG,OAAO,OAAO;QACxC;QACA,gBAAgB,CAAC;YACf,MAAM,YAAY,GAAG;QACvB;IACF;AACF;AACO,MAAM,EACX,eAAe,EACf,cAAc,EACd,WAAW,EACX,mBAAmB,EACnB,cAAc,EACf,GAAG,SAAS,OAAO;uCAEL,SAAS,OAAO","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/reducerSlices/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  email: \"\",\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  role: \"\",\r\n};\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    logoutUser: (state) => {\r\n      return initialState;\r\n    },\r\n    addLoginDetails: (state, action) => {\r\n      const { token, isLoggedIn } = action.payload;\r\n      const { email, role, _id } = action.payload.user;\r\n      return {\r\n        ...state,\r\n        email: email,\r\n        token: token,\r\n        isLoggedIn: isLoggedIn,\r\n        role: role,\r\n        _id: _id,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport const { logoutUser, addLoginDetails } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAM,eAAe;IACnB,OAAO;IACP,OAAO;IACP,YAAY;IACZ,MAAM;AACR;AACO,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACnC,MAAM;IACN,cAAc;IACd,UAAU;QACR,YAAY,CAAC;YACX,OAAO;QACT;QACA,iBAAiB,CAAC,OAAO;YACvB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,OAAO,OAAO;YAC5C,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,OAAO,OAAO,CAAC,IAAI;YAChD,OAAO;gBACL,GAAG,KAAK;gBACR,OAAO;gBACP,OAAO;gBACP,YAAY;gBACZ,MAAM;gBACN,KAAK;YACP;QACF;IACF;AACF;AACO,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,UAAU,OAAO;uCAEjD,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/store.js"],"sourcesContent":["// store.js\r\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport boxSlice from \"./reducerSlices/boxSlice\";\r\nimport userSlice from \"./reducerSlices/userSlice\";\r\nimport reduxLogger from \"redux-logger\";\r\n\r\n// Combine all slices into one reducer\r\nconst rootReducer = combineReducers({\r\n  box: boxSlice,\r\n  user: userSlice,\r\n});\r\n\r\n// Configure persist\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  // You can whitelist only some reducers if you want:\r\n  // whitelist: [\"user\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Create the store\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => [reduxLogger],\r\n});\r\n\r\n// Create the persistor\r\nexport const persistor = persistStore(store);\r\n"],"names":[],"mappings":"AAAA,WAAW;;;;;AACX;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEA,sCAAsC;AACtC,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,KAAK,yIAAA,CAAA,UAAQ;IACb,MAAM,0IAAA,CAAA,UAAS;AACjB;AAEA,oBAAoB;AACpB,MAAM,gBAAgB;IACpB,KAAK;IACL,SAAA,2JAAA,CAAA,UAAO;AAGT;AAEA,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAAE,eAAe;AAGhD,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;IACT,YAAY,CAAC,uBAAyB;YAAC,0JAAA,CAAA,UAAW;SAAC;AACrD;AAGO,MAAM,YAAY,CAAA,GAAA,iMAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/provider.js"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { persistor, store } from \"../redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst ReduxProvider = ({ children }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}></PersistGate>\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ReduxProvider;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AALA;;;;;;AAOA,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAE;IACjC,qBACE,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,qHAAA,CAAA,QAAK;;0BACpB,8OAAC,8JAAA,CAAA,cAAW;gBAAC,SAAS;gBAAM,WAAW,qHAAA,CAAA,YAAS;;;;;;YAC/C;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/navbar.tsx"],"sourcesContent":["'use client'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button } from './ui/button'\r\nimport { useRouter } from 'next/navigation';\r\nimport { logoutUser } from '@/redux/reducerSlices/userSlice'\r\n\r\nconst NavBar = () => {\r\n    const route = useRouter();\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div>\r\n            <Button onClick={() => { dispatch(logoutUser()), route.push('/') }}>Logout</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,SAAS;IACX,MAAM,QAAQ,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACtB,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,qBACI,8OAAC;kBACG,cAAA,8OAAC,kIAAA,CAAA,SAAM;YAAC,SAAS;gBAAQ,SAAS,CAAA,GAAA,0IAAA,CAAA,aAAU,AAAD,MAAM,MAAM,IAAI,CAAC;YAAK;sBAAG;;;;;;;;;;;AAGhF;uCAEe","debugId":null}}]
}