{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/sonner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sonner.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,8DACA","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/sonner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sonner.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,0CACA","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/reducerSlices/boxSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const boxSlice = createSlice({\r\n  name: \"box\",\r\n  initialState: {\r\n    backgroundColor: \"red\",\r\n    width: 200,\r\n    height: 200,\r\n    marginLeft: 0,\r\n    borderRadius: 0,\r\n  },\r\n  reducers: {\r\n    incrementHeight: (state) => {\r\n      state.height = state.height + 10;\r\n    },\r\n    incrementWidth: (state) => {\r\n      state.width = state.width + 10;\r\n    },\r\n    incrementMarginLeft: (state) => {\r\n      state.marginLeft = state.marginLeft + 10;\r\n    },\r\n    changeColor: (state, action) => {\r\n      state.backgroundColor = action.payload;\r\n    },\r\n    changeToCircle: (state) => {\r\n      state.borderRadius = \"100%\";\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  incrementHeight,\r\n  incrementWidth,\r\n  changeColor,\r\n  incrementMarginLeft,\r\n  changeToCircle,\r\n} = boxSlice.actions;\r\n\r\nexport default boxSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAClC,MAAM;IACN,cAAc;QACZ,iBAAiB;QACjB,OAAO;QACP,QAAQ;QACR,YAAY;QACZ,cAAc;IAChB;IACA,UAAU;QACR,iBAAiB,CAAC;YAChB,MAAM,MAAM,GAAG,MAAM,MAAM,GAAG;QAChC;QACA,gBAAgB,CAAC;YACf,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG;QAC9B;QACA,qBAAqB,CAAC;YACpB,MAAM,UAAU,GAAG,MAAM,UAAU,GAAG;QACxC;QACA,aAAa,CAAC,OAAO;YACnB,MAAM,eAAe,GAAG,OAAO,OAAO;QACxC;QACA,gBAAgB,CAAC;YACf,MAAM,YAAY,GAAG;QACvB;IACF;AACF;AACO,MAAM,EACX,eAAe,EACf,cAAc,EACd,WAAW,EACX,mBAAmB,EACnB,cAAc,EACf,GAAG,SAAS,OAAO;uCAEL,SAAS,OAAO","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport boxSlice from \"./reducerSlices/boxSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    box: boxSlice,\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;uCAEe,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAC5B,SAAS;QACP,KAAK,yIAAA,CAAA,UAAQ;IACf;AACF","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/redux/provider.js"],"sourcesContent":["import React from \"react\";\r\nimport store from \"../redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst ReduxProvider = ({ children }) => {\r\n  return <Provider store={store}>{children}</Provider>;\r\n};\r\n\r\nexport default ReduxProvider;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAE;IACjC,qBAAO,8OAAC,8IAAA,CAAA,WAAQ;QAAC,OAAO,qHAAA,CAAA,UAAK;kBAAG;;;;;;AAClC;uCAEe","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { Toaster } from \"@/components/ui/sonner\"\nimport ReduxProvider from \"../redux/provider\";\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <ReduxProvider>\n          {children}\n        </ReduxProvider>\n\n        <Toaster />\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;;;;;;;AAWO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;;8BAEpE,8OAAC,wHAAA,CAAA,UAAa;8BACX;;;;;;8BAGH,8OAAC,kIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB","debugId":null}}]
}