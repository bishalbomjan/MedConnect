{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/users/doctor/timeSlot/page.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Clock, Trash2, User, CheckCircle } from 'lucide-react';\r\nimport { format } from 'date-fns';\r\n\r\nconst TimeSlotCard: React.FC = () => {\r\n    // mock slot to preview the UI\r\n    const slot = {\r\n        id: '1',\r\n        doctorId: 'doctor123',\r\n        date: new Date(),\r\n        startTime: '10:00 AM',\r\n        endTime: '11:00 AM',\r\n        isBooked: true,\r\n        bookedById: 'patient456',\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={`transition-all duration-200 hover:scale-[1.02] border ${slot.isBooked\r\n                    ? 'border-orange-200 bg-orange-50'\r\n                    : 'border-green-200 bg-green-50 hover:bg-green-100'\r\n                }`}\r\n        >\r\n            <CardContent className=\"p-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <div\r\n                            className={`p-2 rounded-full ${slot.isBooked ? 'bg-orange-200' : 'bg-green-200'\r\n                                }`}\r\n                        >\r\n                            <Clock\r\n                                className={`h-4 w-4 ${slot.isBooked ? 'text-orange-600' : 'text-green-600'\r\n                                    }`}\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <span className=\"font-semibold text-gray-800\">\r\n                                    {slot.startTime} - {slot.endTime}\r\n                                </span>\r\n                                <Badge\r\n                                    variant={slot.isBooked ? 'destructive' : 'secondary'}\r\n                                    className={\r\n                                        slot.isBooked ? 'bg-orange-500' : 'bg-green-500'\r\n                                    }\r\n                                >\r\n                                    {slot.isBooked ? 'Booked' : 'Available'}\r\n                                </Badge>\r\n                            </div>\r\n\r\n                            <div className=\"text-sm text-gray-600 mt-1\">\r\n                                {format(slot.date, 'PPP')}\r\n                            </div>\r\n\r\n                            {slot.isBooked && slot.bookedById && (\r\n                                <div className=\"flex items-center mt-1 text-sm text-orange-600\">\r\n                                    <User className=\"h-3 w-3 mr-1\" />\r\n                                    Patient ID: {slot.bookedById}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <Button\r\n                            size=\"sm\"\r\n                            className={`transition-colors ${slot.isBooked\r\n                                    ? 'bg-orange-500 hover:bg-orange-600'\r\n                                    : 'bg-green-500 hover:bg-green-600'\r\n                                }`}\r\n                        >\r\n                            {slot.isBooked ? (\r\n                                <>\r\n                                    <User className=\"h-4 w-4 mr-1\" />\r\n                                    Unbook\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <CheckCircle className=\"h-4 w-4 mr-1\" />\r\n                                    Book\r\n                                </>\r\n                            )}\r\n                        </Button>\r\n\r\n                        <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            className=\"text-red-600 border-red-200 hover:bg-red-50 hover:border-red-300\"\r\n                        >\r\n                            <Trash2 className=\"h-4 w-4\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TimeSlotCard;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA,MAAM,eAAyB;IAC3B,8BAA8B;IAC9B,MAAM,OAAO;QACT,IAAI;QACJ,UAAU;QACV,MAAM,IAAI;QACV,WAAW;QACX,SAAS;QACT,UAAU;QACV,YAAY;IAChB;IAEA,qBACI,8OAAC,gIAAA,CAAA,OAAI;QACD,WAAW,CAAC,sDAAsD,EAAE,KAAK,QAAQ,GACvE,mCACA,mDACJ;kBAEN,cAAA,8OAAC,gIAAA,CAAA,cAAW;YAAC,WAAU;sBACnB,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCACG,WAAW,CAAC,iBAAiB,EAAE,KAAK,QAAQ,GAAG,kBAAkB,gBAC3D;0CAEN,cAAA,8OAAC,oMAAA,CAAA,QAAK;oCACF,WAAW,CAAC,QAAQ,EAAE,KAAK,QAAQ,GAAG,oBAAoB,kBACpD;;;;;;;;;;;0CAId,8OAAC;;kDACG,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAK,WAAU;;oDACX,KAAK,SAAS;oDAAC;oDAAI,KAAK,OAAO;;;;;;;0DAEpC,8OAAC,iIAAA,CAAA,QAAK;gDACF,SAAS,KAAK,QAAQ,GAAG,gBAAgB;gDACzC,WACI,KAAK,QAAQ,GAAG,kBAAkB;0DAGrC,KAAK,QAAQ,GAAG,WAAW;;;;;;;;;;;;kDAIpC,8OAAC;wCAAI,WAAU;kDACV,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE;;;;;;oCAGtB,KAAK,QAAQ,IAAI,KAAK,UAAU,kBAC7B,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAiB;4CACpB,KAAK,UAAU;;;;;;;;;;;;;;;;;;;kCAM5C,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,kIAAA,CAAA,SAAM;gCACH,MAAK;gCACL,WAAW,CAAC,kBAAkB,EAAE,KAAK,QAAQ,GACnC,sCACA,mCACJ;0CAEL,KAAK,QAAQ,iBACV;;sDACI,8OAAC,kMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAAiB;;iEAIrC;;sDACI,8OAAC,2NAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;0CAMpD,8OAAC,kIAAA,CAAA,SAAM;gCACH,MAAK;gCACL,SAAQ;gCACR,WAAU;0CAEV,cAAA,8OAAC,0MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO9C;uCAEe","debugId":null}}]
}