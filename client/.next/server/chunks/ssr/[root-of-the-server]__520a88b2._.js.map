{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/app/api-client.js"],"sourcesContent":["import axios from \"axios\";\r\nconst apiClient = axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n});\r\nexport default apiClient;\r\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS;AACX;uCACe","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/Desktop/medical/MedConnect/client/src/app/admin/patient-approval/page.tsx"],"sourcesContent":["'use client'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { CheckCircle, XCircle, User, Calendar, MapPin, Phone, Mail, Heart } from \"lucide-react\";\r\nimport apiClient from \"@/app/api-client\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst PatientApproval = () => {\r\n\r\n\r\n    const handleReject = (patientId: string) => {\r\n        setPatients(patients.filter(patient => patient._id !== patientId));\r\n    };\r\n\r\n    const [patients, setPatients] = useState([]);\r\n\r\n    const fetchPendingPatient = async () => {\r\n        try {\r\n            const response = await apiClient.get(\"/patientKyc?status=pending\");\r\n            setPatients(response.data);\r\n        } catch (error) {\r\n            toast.error(\"Failed to fetch pending patients.\");\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPendingPatient();\r\n    }, []);\r\n\r\n    const handleApproval = async (patientId) => {\r\n        console.log(patientId)\r\n        debugger\r\n        try {\r\n            const response = await apiClient.patch(`/patientKyc/${patientId}`);\r\n            toast(response.data.message);\r\n            fetchPendingPatient(); // Refresh the list after approval\r\n        } catch (error) {\r\n            toast.error(\"Failed to approve patient.\");\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const calculateAge = (dateOfBirth: string) => {\r\n        const today = new Date();\r\n        const birth = new Date(dateOfBirth);\r\n        let age = today.getFullYear() - birth.getFullYear();\r\n        const monthDiff = today.getMonth() - birth.getMonth();\r\n        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    };\r\n\r\n    const pendingPatients = patients.filter(patient => patient.isKycSubmitted && !patient.isKycApproved);\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-muted/20 p-6\">\r\n            <div className=\"mx-auto max-w-7xl\">\r\n                <div className=\"mb-8 text-center\">\r\n                    <h1 className=\"text-4xl font-bold text-primary mb-2\">Patient Approval Center</h1>\r\n                    <p className=\"text-muted-foreground\">Review and approve pending patient registrations</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"secondary\" className=\"text-lg px-4 py-2\">\r\n                            {pendingPatients.length} Pending Approvals\r\n                        </Badge>\r\n                    </div>\r\n                </div>\r\n\r\n                {pendingPatients.length === 0 ? (\r\n                    <Card className=\"text-center py-12\">\r\n                        <CardContent>\r\n                            <CheckCircle className=\"mx-auto h-16 w-16 text-green-500 mb-4\" />\r\n                            <h3 className=\"text-xl font-semibold mb-2\">All Caught Up!</h3>\r\n                            <p className=\"text-muted-foreground\">No pending patient approvals at the moment.</p>\r\n                        </CardContent>\r\n                    </Card>\r\n                ) : (\r\n                    <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n                        {pendingPatients.map((patient) => (\r\n                            <Card key={patient._id} className=\"overflow-hidden hover:shadow-lg transition-shadow border-l-4 border-l-blue-500\">\r\n                                <CardHeader className=\"bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-950/20 dark:to-blue-900/20\">\r\n                                    <div className=\"flex items-start justify-between\">\r\n                                        <div className=\"flex items-center gap-3\">\r\n                                            <div className=\"h-12 w-12 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center\">\r\n                                                <Heart className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\r\n                                            </div>\r\n                                            <div>\r\n                                                <CardTitle className=\"text-lg\">{patient.fullname}</CardTitle>\r\n                                                <div className=\"flex items-center gap-1 text-sm text-muted-foreground\">\r\n                                                    <Calendar className=\"h-4 w-4\" />\r\n                                                    Age: {calculateAge(patient.dateOfBirth)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Badge variant=\"outline\" className=\"bg-orange-50 text-orange-700 border-orange-200 dark:bg-orange-950/20 dark:text-orange-400 dark:border-orange-800\">\r\n                                            Pending\r\n                                        </Badge>\r\n                                    </div>\r\n                                </CardHeader>\r\n\r\n                                <CardContent className=\"p-6 space-y-4\">\r\n                                    <div className=\"grid grid-cols-1 gap-3 text-sm\">\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <Mail className=\"h-4 w-4 text-muted-foreground\" />\r\n                                            <span className=\"truncate\">{patient.patient.email}</span>\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <Phone className=\"h-4 w-4 text-muted-foreground\" />\r\n                                            <span>{patient.patient.phoneNumber}</span>\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <MapPin className=\"h-4 w-4 text-muted-foreground\" />\r\n                                            <span className=\"capitalize\">{patient.patient.location}</span>\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <User className=\"h-4 w-4 text-muted-foreground\" />\r\n                                            <span className=\"capitalize\">{patient.patient.role}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"bg-muted/50 p-3 rounded-lg\">\r\n                                        <h4 className=\"font-medium mb-2 text-sm\">Personal Information</h4>\r\n                                        <div className=\"text-sm text-muted-foreground\">\r\n                                            <p>Date of Birth: {new Date(patient.dateOfBirth).toLocaleDateString()}</p>\r\n                                            <p>Patient ID: {patient._id.slice(-8)}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex gap-2 pt-4\">\r\n                                        <Button\r\n                                            onClick={() => handleApproval(patient._id)}\r\n                                            className=\"flex-1 bg-green-600 hover:bg-green-700\"\r\n                                        >\r\n                                            <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                                            Approve\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => handleReject(patient._id)}\r\n                                            variant=\"destructive\"\r\n                                            className=\"flex-1\"\r\n                                        >\r\n                                            <XCircle className=\"h-4 w-4 mr-2\" />\r\n                                            Reject\r\n                                        </Button>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientApproval;"],"names":[],"mappings":"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","debugId":null}}]
}