{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/bomja/Desktop/medical/MedConnect/client/src/app/doctor/page.tsx"],"sourcesContent":["'use client'\r\nimport React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Input } from '@/components/ui/input';\r\nimport {\r\n    Calendar,\r\n    Clock,\r\n    User,\r\n    Phone,\r\n    Mail,\r\n    MapPin,\r\n    Activity,\r\n    Users,\r\n    CheckCircle,\r\n    XCircle,\r\n    Edit,\r\n    Search\r\n} from 'lucide-react';\r\nimport { toast } from 'sonner';\r\n\r\ninterface Appointment {\r\n    id: string;\r\n    patientName: string;\r\n    patientEmail: string;\r\n    patientPhone: string;\r\n    date: string;\r\n    time: string;\r\n    type: string;\r\n    status: 'scheduled' | 'confirmed' | 'completed' | 'cancelled';\r\n    reason: string;\r\n}\r\n\r\ninterface DoctorStats {\r\n    todayAppointments: number;\r\n    upcomingAppointments: number;\r\n    totalPatients: number;\r\n    completedToday: number;\r\n}\r\n\r\nconst mockAppointments: Appointment[] = [\r\n    {\r\n        id: '1',\r\n        patientName: 'John Smith',\r\n        patientEmail: 'john.smith@email.com',\r\n        patientPhone: '+1 (555) 123-4567',\r\n        date: '2024-01-15',\r\n        time: '09:00',\r\n        type: 'Consultation',\r\n        status: 'scheduled',\r\n        reason: 'Regular checkup'\r\n    },\r\n    {\r\n        id: '2',\r\n        patientName: 'Sarah Johnson',\r\n        patientEmail: 'sarah.j@email.com',\r\n        patientPhone: '+1 (555) 987-6543',\r\n        date: '2024-01-15',\r\n        time: '10:30',\r\n        type: 'Follow-up',\r\n        status: 'confirmed',\r\n        reason: 'Blood test results review'\r\n    },\r\n    {\r\n        id: '3',\r\n        patientName: 'Mike Brown',\r\n        patientEmail: 'mike.brown@email.com',\r\n        patientPhone: '+1 (555) 456-7890',\r\n        date: '2024-01-15',\r\n        time: '14:00',\r\n        type: 'Emergency',\r\n        status: 'scheduled',\r\n        reason: 'Chest pain'\r\n    },\r\n    {\r\n        id: '4',\r\n        patientName: 'Emily Davis',\r\n        patientEmail: 'emily.davis@email.com',\r\n        patientPhone: '+1 (555) 321-9876',\r\n        date: '2024-01-16',\r\n        time: '11:00',\r\n        type: 'Consultation',\r\n        status: 'scheduled',\r\n        reason: 'Headache consultation'\r\n    }\r\n];\r\n\r\nconst DoctorHome = () => {\r\n    const [appointments, setAppointments] = useState<Appointment[]>(mockAppointments);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const stats: DoctorStats = {\r\n        todayAppointments: appointments.filter(apt => apt.date === '2024-01-15').length,\r\n        upcomingAppointments: appointments.filter(apt => apt.status === 'scheduled' || apt.status === 'confirmed').length,\r\n        totalPatients: appointments.length,\r\n        completedToday: appointments.filter(apt => apt.date === '2024-01-15' && apt.status === 'completed').length\r\n    };\r\n\r\n    const handleReschedule = (appointmentId: string) => {\r\n        // In a real app, this would open a date/time picker modal\r\n        toast.info('Reschedule functionality would open a date/time picker');\r\n    };\r\n\r\n    const handleCancel = (appointmentId: string) => {\r\n        setAppointments(prev =>\r\n            prev.map(apt =>\r\n                apt.id === appointmentId\r\n                    ? { ...apt, status: 'cancelled' as const }\r\n                    : apt\r\n            )\r\n        );\r\n        toast.success('Appointment cancelled successfully');\r\n    };\r\n\r\n    const handleComplete = (appointmentId: string) => {\r\n        setAppointments(prev =>\r\n            prev.map(apt =>\r\n                apt.id === appointmentId\r\n                    ? { ...apt, status: 'completed' as const }\r\n                    : apt\r\n            )\r\n        );\r\n        toast.success('Appointment marked as completed');\r\n    };\r\n\r\n    const filteredAppointments = appointments.filter(apt =>\r\n        apt.patientName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        apt.reason.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    const todayAppointments = filteredAppointments.filter(apt => apt.date === '2024-01-15');\r\n    const upcomingAppointments = filteredAppointments.filter(apt =>\r\n        apt.date > '2024-01-15' && (apt.status === 'scheduled' || apt.status === 'confirmed')\r\n    );\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-white p-6\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                {/* Header */}\r\n                <div className=\"mb-8\">\r\n                    <h1 className=\"text-4xl font-bold text-green-800 mb-2\">Doctor Dashboard</h1>\r\n                    <p className=\"text-green-600 text-lg\">Welcome back, Dr. Smith</p>\r\n                </div>\r\n\r\n                {/* Statistics Cards */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n                    <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-green-600 text-sm font-medium\">Today's Appointments</p>\r\n                                    <p className=\"text-3xl font-bold text-green-800\">{stats.todayAppointments}</p>\r\n                                </div>\r\n                                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center\">\r\n                                    <Calendar className=\"w-6 h-6 text-green-600\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-green-600 text-sm font-medium\">Upcoming</p>\r\n                                    <p className=\"text-3xl font-bold text-green-800\">{stats.upcomingAppointments}</p>\r\n                                </div>\r\n                                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center\">\r\n                                    <Clock className=\"w-6 h-6 text-green-600\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-green-600 text-sm font-medium\">Total Patients</p>\r\n                                    <p className=\"text-3xl font-bold text-green-800\">{stats.totalPatients}</p>\r\n                                </div>\r\n                                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center\">\r\n                                    <Users className=\"w-6 h-6 text-green-600\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-green-600 text-sm font-medium\">Completed Today</p>\r\n                                    <p className=\"text-3xl font-bold text-green-800\">{stats.completedToday}</p>\r\n                                </div>\r\n                                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center\">\r\n                                    <Activity className=\"w-6 h-6 text-green-600\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n\r\n                {/* Search */}\r\n                <div className=\"mb-6\">\r\n                    <div className=\"relative max-w-md\">\r\n                        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-green-600 w-4 h-4\" />\r\n                        <Input\r\n                            placeholder=\"Search appointments...\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                            className=\"pl-10 border-green-200 focus:border-green-500\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Appointments Tabs */}\r\n                <Tabs defaultValue=\"today\" className=\"space-y-6\">\r\n                    <TabsList className=\"bg-green-100\">\r\n                        <TabsTrigger value=\"today\" className=\"data-[state=active]:bg-green-600 data-[state=active]:text-white\">\r\n                            Today's Appointments\r\n                        </TabsTrigger>\r\n                        <TabsTrigger value=\"upcoming\" className=\"data-[state=active]:bg-green-600 data-[state=active]:text-white\">\r\n                            Upcoming\r\n                        </TabsTrigger>\r\n                        <TabsTrigger value=\"all\" className=\"data-[state=active]:bg-green-600 data-[state=active]:text-white\">\r\n                            All Appointments\r\n                        </TabsTrigger>\r\n                    </TabsList>\r\n\r\n                    <TabsContent value=\"today\" className=\"space-y-4\">\r\n                        <h2 className=\"text-2xl font-bold text-green-800\">Today's Schedule</h2>\r\n                        {todayAppointments.length > 0 ? (\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                                {todayAppointments.map((appointment) => (\r\n                                    <AppointmentCard\r\n                                        key={appointment.id}\r\n                                        appointment={appointment}\r\n                                        onReschedule={handleReschedule}\r\n                                        onCancel={handleCancel}\r\n                                        onComplete={handleComplete}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        ) : (\r\n                            <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                                <CardContent className=\"p-8 text-center\">\r\n                                    <Calendar className=\"w-12 h-12 text-green-300 mx-auto mb-4\" />\r\n                                    <p className=\"text-green-600\">No appointments scheduled for today</p>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )}\r\n                    </TabsContent>\r\n\r\n                    <TabsContent value=\"upcoming\" className=\"space-y-4\">\r\n                        <h2 className=\"text-2xl font-bold text-green-800\">Upcoming Appointments</h2>\r\n                        {upcomingAppointments.length > 0 ? (\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                                {upcomingAppointments.map((appointment) => (\r\n                                    <AppointmentCard\r\n                                        key={appointment.id}\r\n                                        appointment={appointment}\r\n                                        onReschedule={handleReschedule}\r\n                                        onCancel={handleCancel}\r\n                                        onComplete={handleComplete}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        ) : (\r\n                            <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                                <CardContent className=\"p-8 text-center\">\r\n                                    <Clock className=\"w-12 h-12 text-green-300 mx-auto mb-4\" />\r\n                                    <p className=\"text-green-600\">No upcoming appointments</p>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )}\r\n                    </TabsContent>\r\n\r\n                    <TabsContent value=\"all\" className=\"space-y-4\">\r\n                        <h2 className=\"text-2xl font-bold text-green-800\">All Appointments</h2>\r\n                        {filteredAppointments.length > 0 ? (\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                                {filteredAppointments.map((appointment) => (\r\n                                    <AppointmentCard\r\n                                        key={appointment.id}\r\n                                        appointment={appointment}\r\n                                        onReschedule={handleReschedule}\r\n                                        onCancel={handleCancel}\r\n                                        onComplete={handleComplete}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        ) : (\r\n                            <Card className=\"border-green-200 bg-white shadow-lg\">\r\n                                <CardContent className=\"p-8 text-center\">\r\n                                    <Search className=\"w-12 h-12 text-green-300 mx-auto mb-4\" />\r\n                                    <p className=\"text-green-600\">No appointments found</p>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )}\r\n                    </TabsContent>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface AppointmentCardProps {\r\n    appointment: Appointment;\r\n    onReschedule: (id: string) => void;\r\n    onCancel: (id: string) => void;\r\n    onComplete: (id: string) => void;\r\n}\r\n\r\nconst AppointmentCard: React.FC<AppointmentCardProps> = ({\r\n    appointment,\r\n    onReschedule,\r\n    onCancel,\r\n    onComplete\r\n}) => {\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'scheduled': return 'bg-yellow-100 text-yellow-800';\r\n            case 'confirmed': return 'bg-blue-100 text-blue-800';\r\n            case 'completed': return 'bg-green-100 text-green-800';\r\n            case 'cancelled': return 'bg-red-100 text-red-800';\r\n            default: return 'bg-gray-100 text-gray-800';\r\n        }\r\n    };\r\n\r\n    const getTypeColor = (type: string) => {\r\n        switch (type) {\r\n            case 'Emergency': return 'bg-red-100 text-red-800';\r\n            case 'Follow-up': return 'bg-blue-100 text-blue-800';\r\n            case 'Consultation': return 'bg-green-100 text-green-800';\r\n            default: return 'bg-gray-100 text-gray-800';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"border-green-200 bg-white shadow-lg hover:shadow-xl transition-all duration-300\">\r\n            <CardHeader className=\"pb-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <CardTitle className=\"text-green-800 text-lg\">{appointment.patientName}</CardTitle>\r\n                    <div className=\"flex space-x-2\">\r\n                        <Badge className={getTypeColor(appointment.type)}>\r\n                            {appointment.type}\r\n                        </Badge>\r\n                        <Badge className={getStatusColor(appointment.status)}>\r\n                            {appointment.status}\r\n                        </Badge>\r\n                    </div>\r\n                </div>\r\n                <p className=\"text-green-600 font-medium\">{appointment.reason}</p>\r\n            </CardHeader>\r\n\r\n            <CardContent className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2 text-gray-600\">\r\n                    <Calendar className=\"w-4 h-4 text-green-600\" />\r\n                    <span className=\"text-sm\">{appointment.date}</span>\r\n                </div>\r\n\r\n                <div className=\"flex items-center space-x-2 text-gray-600\">\r\n                    <Clock className=\"w-4 h-4 text-green-600\" />\r\n                    <span className=\"text-sm\">{appointment.time}</span>\r\n                </div>\r\n\r\n                <div className=\"flex items-center space-x-2 text-gray-600\">\r\n                    <Mail className=\"w-4 h-4 text-green-600\" />\r\n                    <span className=\"text-sm\">{appointment.patientEmail}</span>\r\n                </div>\r\n\r\n                <div className=\"flex items-center space-x-2 text-gray-600\">\r\n                    <Phone className=\"w-4 h-4 text-green-600\" />\r\n                    <span className=\"text-sm\">{appointment.patientPhone}</span>\r\n                </div>\r\n\r\n                {appointment.status !== 'cancelled' && appointment.status !== 'completed' && (\r\n                    <div className=\"flex space-x-2 pt-4\">\r\n                        <Button\r\n                            onClick={() => onComplete(appointment.id)}\r\n                            className=\"flex-1 bg-green-600 hover:bg-green-700 text-white\"\r\n                            size=\"sm\"\r\n                        >\r\n                            <CheckCircle className=\"w-4 h-4 mr-1\" />\r\n                            Complete\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => onReschedule(appointment.id)}\r\n                            variant=\"outline\"\r\n                            className=\"flex-1 border-green-300 text-green-600 hover:bg-green-50\"\r\n                            size=\"sm\"\r\n                        >\r\n                            <Edit className=\"w-4 h-4 mr-1\" />\r\n                            Reschedule\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => onCancel(appointment.id)}\r\n                            variant=\"outline\"\r\n                            className=\"flex-1 border-red-300 text-red-600 hover:bg-red-50\"\r\n                            size=\"sm\"\r\n                        >\r\n                            <XCircle className=\"w-4 h-4 mr-1\" />\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DoctorHome;"],"names":[],"mappings":"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","debugId":null}}]
}